{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navbar.jsx","app.jsx","components/simpleHabit.jsx","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","console","log","this","name","count","className","onClick","PureComponent","HabitAddForm","memo","formRef","React","createRef","inputRef","ref","onSubmit","event","preventDefault","current","value","onAdd","reset","type","placeholder","Habits","habits","map","li","id","onReset","Component","Navbar","totalCount","SimpleHabit","useState","setCount","spanRef","useRef","useCallback","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAEMA,E,4MAUJC,gBAAkB,WAChB,EAAKC,MAAMC,YAAY,EAAKD,MAAME,Q,EAGpCC,gBAAkB,WAChB,EAAKH,MAAMI,YAAY,EAAKJ,MAAME,Q,EAGpCG,aAAe,WACb,EAAKL,MAAMM,SAAS,EAAKN,MAAME,Q,uDAlBjC,WACEK,QAAQC,IAAR,iBAAsBC,KAAKT,MAAME,MAAMQ,KAAvC,e,kCAGF,WACEH,QAAQC,IAAR,iBAAsBC,KAAKT,MAAME,MAAMQ,KAAvC,oB,oBAgBF,WAOE,MAAwBD,KAAKT,MAAME,MAA3BQ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OACE,qBAAIC,UAAU,QAAd,UACE,sBAAMA,UAAU,aAAhB,SAA8BF,IAC9B,sBAAME,UAAU,cAAhB,SAA+BD,IAC/B,wBACEC,UAAU,8BACVC,QAASJ,KAAKV,gBAFhB,SAIE,mBAAGa,UAAU,yBAEf,wBACEA,UAAU,8BACVC,QAASJ,KAAKN,gBAFhB,SAIE,mBAAGS,UAAU,0BAEf,wBACEA,UAAU,4BACVC,QAASJ,KAAKJ,aAFhB,SAIE,mBAAGO,UAAU,0B,GAnDHE,iBA0DLhB,IClCAiB,EAxBMC,gBAAK,SAAChB,GACzB,IAAMiB,EAAUC,IAAMC,YAChBC,EAAWF,IAAMC,YASvB,OACE,uBAAME,IAAKJ,EAASL,UAAU,WAAWU,SAR1B,SAACC,GAChBA,EAAMC,iBACN,IAAMd,EAAOU,EAASK,QAAQC,MAC9BhB,GAAQV,EAAM2B,MAAMjB,GACpBO,EAAQQ,QAAQG,SAIhB,UACE,uBACEP,IAAKD,EACLS,KAAK,OACLjB,UAAU,YACVkB,YAAY,UAEd,wBAAQlB,UAAU,aAAlB,uBCjBAmB,E,4JACJ,WAAU,IAAD,OACP,OACE,qCACE,cAAC,EAAD,CAAcJ,MAAOlB,KAAKT,MAAM2B,QAChC,6BACGlB,KAAKT,MAAMgC,OAAOC,KAAI,SAAC/B,GAAD,OACrB,cAAC,EAAD,CAEEA,MAAOA,EACPD,YAAa,EAAKD,MAAMC,YACxBG,YAAa,EAAKJ,MAAMI,YACxBE,SAAU,EAAKN,MAAMM,SACrBe,IAAK,SAACA,GACJ,EAAKa,GAAKb,IANPnB,EAAMiC,SAWjB,wBAAQvB,UAAU,eAAeC,QAASJ,KAAKT,MAAMoC,QAArD,8B,GAnBaC,aA2BNN,IC7BTO,E,4JACJ,WACE,OACE,sBAAK1B,UAAU,SAAf,UACE,mBAAGA,UAAU,4BACb,iDACA,sBAAMA,UAAU,eAAhB,SAAgCH,KAAKT,MAAMuC,oB,GAN9BF,aAYNC,I,GCTGD,Y,aCsBHG,EAzBK,SAACxC,GACnB,MAA0ByC,mBAAS,GAAnC,mBAAO9B,EAAP,KAAc+B,EAAd,KACMC,EAAUC,mBAEV7C,EAAkB8C,uBAAY,WAClCH,EAAS/B,EAAQ,MAOnB,OAJAmC,qBAAU,WACRvC,QAAQC,IAAR,4BAAiCG,MAChC,CAACA,IAGF,qBAAIC,UAAU,QAAd,UACE,sBAAMS,IAAKsB,EAAS/B,UAAU,aAA9B,qBAGA,sBAAMA,UAAU,cAAhB,SAA+BD,IAC/B,wBAAQC,UAAU,8BAA8BC,QAASd,EAAzD,SACE,mBAAGa,UAAU,6BCdrBmC,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1ddd152c.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\n\nclass Habit extends PureComponent {\n  componentDidMount() {\n    console.log(`habit: ${this.props.habit.name} mounted`);\n  }\n\n  componentWillUnmount() {\n    console.log(`habit: ${this.props.habit.name} will unmount`);\n  }\n\n  //부모 컴포넌트로부터 전달받은 props를 실행\n  handleIncrement = () => {\n    this.props.onIncrement(this.props.habit);\n  };\n\n  handleDecrement = () => {\n    this.props.onDecrement(this.props.habit);\n  };\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.habit);\n  };\n\n  render() {\n    /* 외부에서 props으로 전달받은 데이터!\n        -> 직접 내부의 state가 아닌 이벤트가 들어왔을 때 콜백함수를 호출하는 용도의 컴포넌트로 만들기\n        -> 콜백함수도 부모로부터 전달받기\n        => 이 컴포넌트는 단순한 역할로.\n    */\n\n    const { name, count } = this.props.habit;\n\n    return (\n      <li className=\"habit\">\n        <span className=\"habit-name\">{name}</span>\n        <span className=\"habit-count\">{count}</span>\n        <button\n          className=\"habit-button habit-increase\"\n          onClick={this.handleIncrement}\n        >\n          <i className=\"fas fa-plus-square\"></i>\n        </button>\n        <button\n          className=\"habit-button habit-decrease\"\n          onClick={this.handleDecrement}\n        >\n          <i className=\"fas fa-minus-square\"></i>\n        </button>\n        <button\n          className=\"habit-button habit-delete\"\n          onClick={this.handleDelete}\n        >\n          <i className=\"fas fa-trash\"></i>\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Habit;\n","import React, { memo } from 'react';\n\nconst HabitAddForm = memo((props) => {\n  const formRef = React.createRef();\n  const inputRef = React.createRef();\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const name = inputRef.current.value;\n    name && props.onAdd(name);\n    formRef.current.reset();\n  };\n\n  return (\n    <form ref={formRef} className=\"add-form\" onSubmit={onSubmit}>\n      <input\n        ref={inputRef}\n        type=\"text\"\n        className=\"add-input\"\n        placeholder=\"Habit\"\n      />\n      <button className=\"add-button\">Add</button>\n    </form>\n  );\n});\n\nexport default HabitAddForm;\n","import React, { Component } from 'react';\nimport Habit from './habit';\nimport HabitAddForm from './habitAddForm';\n\nclass Habits extends Component {\n  render() {\n    return (\n      <>\n        <HabitAddForm onAdd={this.props.onAdd}></HabitAddForm>\n        <ul>\n          {this.props.habits.map((habit) => (\n            <Habit\n              key={habit.id}\n              habit={habit}\n              onIncrement={this.props.onIncrement}\n              onDecrement={this.props.onDecrement}\n              onDelete={this.props.onDelete}\n              ref={(ref) => {\n                this.li = ref;\n              }}\n            />\n          ))}\n        </ul>\n        <button className=\"habits-reset\" onClick={this.props.onReset}>\n          Reset All\n        </button>\n      </>\n    );\n  }\n}\n\nexport default Habits;\n","import React, { Component } from 'react';\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar\">\n        <i className=\"navbar-logo fas fa-leaf\"></i>\n        <span>Habit Tracker</span>\n        <span className=\"navbar-count\">{this.props.totalCount}</span>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\n\nclass App extends Component {\n  state = {\n    habits: [\n      { id: 1, name: 'Reading', count: 0 },\n      { id: 2, name: 'Learning', count: 0 },\n      { id: 3, name: 'Coding', count: 0 },\n    ],\n  };\n\n  handleIncrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        return { ...habit, count: habit.count + 1 };\n      }\n      return item;\n    });\n    this.setState({ habits });\n  };\n\n  handleDecrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        const count = habit.count - 1;\n        return { ...habit, count: count < 0 ? 0 : count };\n      }\n      return item;\n    });\n    this.setState({ habits });\n  };\n\n  handleDelete = (habit) => {\n    const habits = this.state.habits.filter((item) => item.id !== habit.id);\n    this.setState({ habits });\n  };\n\n  handleReset = () => {\n    const habits = this.state.habits.map((habit) => {\n      if (habit.count !== 0) {\n        return { ...habit, count: 0 };\n      }\n      return habit;\n    });\n    this.setState({ habits });\n  };\n\n  handleAdd = (name) => {\n    const habits = [...this.state.habits, { id: Date.now(), name, count: 0 }];\n    this.setState({ habits });\n  };\n\n  render() {\n    return (\n      <>\n        <Navbar\n          totalCount={this.state.habits.filter((item) => item.count > 0).length}\n        ></Navbar>\n        <Habits\n          habits={this.state.habits}\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onReset={this.handleReset}\n          onAdd={this.handleAdd}\n        ></Habits>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React, { useState, useCallback, useRef, useEffect } from 'react';\n\nconst SimpleHabit = (props) => {\n  const [count, setCount] = useState(0);\n  const spanRef = useRef();\n\n  const handleIncrement = useCallback(() => {\n    setCount(count + 1);\n  });\n\n  useEffect(() => {\n    console.log(`mounted & updated ${count}`);\n  }, [count]);\n\n  return (\n    <li className=\"habit\">\n      <span ref={spanRef} className=\"habit-name\">\n        Reading\n      </span>\n      <span className=\"habit-count\">{count}</span>\n      <button className=\"habit-button habit-increase\" onClick={handleIncrement}>\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n    </li>\n  );\n};\n\nexport default SimpleHabit;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <SimpleHabit />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}